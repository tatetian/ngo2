(function() {var implementors = {};
implementors["io_uring"] = [{"text":"impl RefUnwindSafe for Probe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for Submitter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IoUring","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Parameters","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for CompletionQueue","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AvailableQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Nop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Readv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Writev","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fsync","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteFixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollAdd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PollRemove","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SyncFileRange","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RecvMsg","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Timeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeoutRemove","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Accept","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for AsyncCancel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for LinkTimeout","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fallocate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Openat","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Close","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilesUpdate","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Statx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Read","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Write","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fadvise","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Madvise","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Send","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Recv","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Openat2","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for EpollCtl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for __kernel_timespec","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for statx","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for epoll_event","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fd","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeoutFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FsyncFlags","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OpenHow","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SubmissionQueue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for AvailableQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; RefUnwindSafe for CompletionQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for SubmissionQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IoUring","synthetic":true,"types":[]}];
implementors["io_uring_callback"] = [{"text":"impl&lt;T&gt; !RefUnwindSafe for IoUringCell&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for IoUringArray&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IoHandle","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for IoUring","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for IoState","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl RefUnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl RefUnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequeueOp","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()