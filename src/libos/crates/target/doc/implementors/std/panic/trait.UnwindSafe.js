(function() {var implementors = {};
implementors["io_uring"] = [{"text":"impl UnwindSafe for Probe","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for Submitter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IoUring","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Parameters","synthetic":true,"types":[]},{"text":"impl UnwindSafe for CompletionQueue","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AvailableQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Nop","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Readv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Writev","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fsync","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ReadFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WriteFixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollAdd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for PollRemove","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SyncFileRange","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SendMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RecvMsg","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Timeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeoutRemove","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Accept","synthetic":true,"types":[]},{"text":"impl UnwindSafe for AsyncCancel","synthetic":true,"types":[]},{"text":"impl UnwindSafe for LinkTimeout","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Connect","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fallocate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Openat","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Close","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilesUpdate","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Statx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Read","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Write","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fadvise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Madvise","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Send","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Recv","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Openat2","synthetic":true,"types":[]},{"text":"impl UnwindSafe for EpollCtl","synthetic":true,"types":[]},{"text":"impl UnwindSafe for __kernel_timespec","synthetic":true,"types":[]},{"text":"impl UnwindSafe for statx","synthetic":true,"types":[]},{"text":"impl UnwindSafe for epoll_event","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fd","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Fixed","synthetic":true,"types":[]},{"text":"impl UnwindSafe for TimeoutFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FsyncFlags","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OpenHow","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SubmissionQueue","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for AvailableQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Entry","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Flags","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; UnwindSafe for CompletionQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !UnwindSafe for SubmissionQueue&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IoUring","synthetic":true,"types":[]}];
implementors["io_uring_callback"] = [{"text":"impl&lt;T&gt; UnwindSafe for IoUringCell&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; UnwindSafe for IoUringArray&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: UnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IoHandle","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IoUring","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Builder","synthetic":true,"types":[]},{"text":"impl UnwindSafe for IoState","synthetic":true,"types":[]}];
implementors["parking_lot"] = [{"text":"impl UnwindSafe for Condvar","synthetic":true,"types":[]},{"text":"impl UnwindSafe for WaitTimeoutResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for Once","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawFairMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawMutex","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawRwLock","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RawThreadId","synthetic":true,"types":[]},{"text":"impl UnwindSafe for OnceState","synthetic":true,"types":[]}];
implementors["parking_lot_core"] = [{"text":"impl UnwindSafe for ParkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for UnparkToken","synthetic":true,"types":[]},{"text":"impl UnwindSafe for SpinWait","synthetic":true,"types":[]},{"text":"impl UnwindSafe for FilterOp","synthetic":true,"types":[]},{"text":"impl UnwindSafe for ParkResult","synthetic":true,"types":[]},{"text":"impl UnwindSafe for RequeueOp","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()